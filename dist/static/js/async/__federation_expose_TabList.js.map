{"version":3,"file":"static/js/async/__federation_expose_TabList.js","sources":["/Users/billchlanda/Desktop/design-system-mdrn/src/components/tabular/TabList.tsx"],"sourcesContent":["import { useCallback, useRef } from 'react';\n\ninterface TabListProps {\n    children: React.ReactNode;\n    ariaLabel: string;\n}\n\nconst TabList: React.FC<TabListProps> = ({ children, ariaLabel }) => {\n    const refList = useRef<HTMLDivElement>(null);\n\n    const onKeyDown = useCallback((e: React.KeyboardEvent) => {\n        const list = refList.current;\n        if (!list) return;\n\n        const tabs = Array.from<HTMLElement>(list.querySelectorAll('[role=\"tab\"]:not([disabled])'));\n\n        const index = tabs.indexOf(document.activeElement as HTMLElement);\n\n        if (index < 0) return;\n        switch (e.key) {\n            case 'ArrowUp':\n            case 'ArrowLeft': {\n                const next = (index - 1 + tabs.length) % tabs.length;\n                tabs[next]?.focus();\n                break;\n            }\n            case 'ArrowDown':\n            case 'ArrowRight': {\n                const next = (index + 1 + tabs.length) % tabs.length;\n                tabs[next]?.focus();\n                break;\n            }\n        }\n    }, []);\n\n    return (\n        <div aria-label={ariaLabel} onKeyDown={onKeyDown} ref={refList} role=\"tablist\">\n            {children}\n        </div>\n    );\n};\n\nexport default TabList;\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAOA;AAAA;;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AADA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;AAGA;AAjCA;AAAA;AAmCA"}